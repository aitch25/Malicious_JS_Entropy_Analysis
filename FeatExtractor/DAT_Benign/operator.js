/*
 * 位运算符的简单解释:
 * ~ 把运算数转换成32位数字 把二进制数转换成它的二进制反码 把二进制数转换成浮点数 实质上是对数字求负，然后减 1
 *
 * | 对两个数字先转换成二进制的数字 然后对他们的每一位进行按位或的操作
 *
 * & 对两个数字先转换成二进制的数字 然后对他们的每一位进行按位与的操作
 *
 * ^ 对两个数字先转换成二进制的数字 然后对他们的每一位进行按位与或的操作
 *
 * << 对一个数字转化成二进制 然后将它的所有数位整体向左移动 保留符号
 *
 * >> 对一个数字转化成二进制 然后将它的所有数位整体向右移动 保留符号
 */
var a = 3;
var b = 9;
var c = -3;
var d = -12;

// ~ 取反
console.log(~a); // -(3)-1

// | 按位或
console.log(a|b); // 11

// & 按位与
console.log(a&b); // 1

// ^ 按位与或
console.log(a^b); // 10

// << 左移运算符
console.log(a << 2); // 12

// >> 右移运算符
console.log(d >> 1); // -6

// 00
console.log(~2 === -3);
